version: '3'
services:
  backend:
    container_name: recipe-maker-api
    build: .
    image: recipe-maker:latest
    ports:
      - 8080:8080
    profiles: [ 'full', 'backend' ]
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://admin:admin@postgres:5432/admin
      - VALIDATE_JWT=${VALIDATE_JWT}
      - JWT_SIGNING_SECRET=${JWT_SIGNING_SECRET}
      - DEBUG_LOGGING=${DEBUG_LOGGING}
    restart: always
    depends_on:
      db-migration:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

  frontend:
    container_name: recipe-maker-frontend
    build: ../recipe-maker-ui
    image: recipe-maker-frontend:latest
    ports:
      - 3000:3000
    profiles: [ 'full', 'frontend' ]
    restart: always
    environment:
      - PROXY_HOST=reverse-proxy

  reverse-proxy:
    image: public.ecr.aws/nginx/nginx:mainline
    container_name: reverse-proxy
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - backend
      - frontend
      - pgadmin
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

  postgres:
    container_name: postgres
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    ports:
      - 5432:5432
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}' ]
      interval: 5s
      timeout: 5s
      retries: 5

  db-migration:
    container_name: db-migration
    build:
      context: .
      dockerfile: ./migrations/Dockerfile
    image: recipe-maker-dbmigration:latest
    depends_on:
      postgres:
        condition: service_healthy

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      postgres:
        condition: service_healthy
    profiles: [ 'full', 'pgadmin' ]
