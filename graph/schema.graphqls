type Recipe {
  id: ID!
  name: String!
}

type RecipeRole {
  id: ID!
  recipeId: ID!
  userId: ID!
  relation: String!
}

type Ingredient {
  id: ID!
  name: String!
}

type PantryItem {
  id: ID!
  name: String!
  quantity: Int!
  unit: String!
}

type Query {
  recipes: [Recipe!]!
  recipe(id: ID!): Recipe!
  ingredients: [Ingredient!]!
  ingredient(id: ID!): Ingredient!
  pantryItems: [PantryItem!]!
  pantryItem(id: ID!): PantryItem!
}

input AddRecipeInput {
  name: String!
}

input UpdateRecipeInput {
  id: ID!
  name: String!
}

input AddIngredientInput {
  name: String!
}

input AddPantryItemInput {
  ingredientId: ID!
  quantity: Int
}

input UpdatePantryItemInput {
  id: ID!
  quantity: Int
}

type Mutation {
  addRecipe(input: AddRecipeInput!): Recipe!
  updateRecipe(input: UpdateRecipeInput!): Recipe!
  addIngredient(input: AddIngredientInput!): Ingredient!
  addPantryItem(input: AddPantryItemInput!): PantryItem!
  updatePantryItem(input: UpdatePantryItemInput!): PantryItem!
}
